{
  "meta": {
    "project": "InBoxt",
    "date": "2025-09-13",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "InBoxt is an AI-powered email digest web application that transforms users' inboxes into daily, actionable insights. It uses AI to summarize and prioritize important emails, allowing users to efficiently manage their communications by focusing on what matters most, saving time and reducing overwhelm.",
  "core_goals": [
    "Provide a seamless onboarding experience with secure email integration and personalized preferences.",
    "Automate daily email digest generation with AI-powered summarization and importance scoring.",
    "Offer an intuitive dashboard for viewing today’s prioritized emails and historical digests.",
    "Enable effective task management by converting emails into actionable tasks with deadlines.",
    "Ensure secure data storage and compliance with privacy regulations.",
    "Deliver a responsive, accessible, and performant user interface for desktop and mobile users."
  ],
  "key_features": [
    "Secure user authentication with email/password and OAuth providers like Google and Apple.",
    "One-time setup wizard for email connection, digest scheduling, and preference customization.",
    "Cron-based email fetching with AI-powered gist extraction and importance scoring using OpenRouter API.",
    "Daily digest dashboard displaying top important emails with gist summaries and direct links.",
    "Historical digest view with search functionality powered by natural language queries.",
    "Task management system to save emails as tasks with AI-inferred deadlines, including editing, completion toggles, and deletion.",
    "Supabase backend for user data, digest storage, task management, and AI integration.",
    "Privacy-first design ensuring transient email processing and user control over data retention.",
    "Responsive design with accessibility adherence (WCAG 2.1 AA) and loading state handling.",
    "Future provisions for premium features like advanced search, reminders, and data export."
  ],
  "user_flow_summary": [
    "User signs up or logs in securely using email/password or OAuth, and completes the onboarding wizard connecting their email provider and setting preferences.",
    "The system fetches unread emails daily via a Supabase cron job, processes them through the AI API to extract gists and importance scores, then selects and stores the most important emails as the daily digest.",
    "User visits the dashboard to see today’s digest featuring email summaries, with options to refresh or save emails as tasks.",
    "User accesses historical digests to review past emails and search through them using natural language queries.",
    "User saves emails to tasks, manages task lists by marking completed, editing deadlines, or deleting tasks.",
    "System retains digests and tasks for 90 days, supporting search and context for AI queries, with privacy-centric data handling."
  ],
  "validation_criteria": [
    "Successful user authentication and smooth onboarding connection to email providers.",
    "Accurate and timely daily fetching and AI processing of emails with correct gist summaries and importance scoring.",
    "Reliable display of today’s digest, historical digests, and the correctness of the search functionality.",
    "Proper task creation from emails with accurate deadline extraction and full CRUD operations on tasks.",
    "Compliance with data privacy regulations and secure handling of credentials and API keys.",
    "Responsive UI across devices with accessible design meeting WCAG 2.1 AA standards.",
    "System performance metrics meet targets: digest loading under 2 seconds, AI processing within 30 seconds.",
    "Robust error handling for email fetch failures, AI processing errors, and user notifications accordingly."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React 18",
      "Vite 5",
      "React Router v6",
      "@tanstack/react-query v5",
      "Supabase (Postgres, Auth, Edge Functions)",
      "Tailwind CSS",
      "shadcn/ui components",
      "lucide-react",
      "date-fns",
      "recharts"
    ],
    "features": [
      {
        "name": "App Shell & Routing",
        "description": "Application shell with global providers, error boundary, and route setup including protected nested routes. Uses React.lazy code-splitting and Suspense fallback for faster initial load.",
        "files": [
          "src/main.tsx",
          "src/App.tsx",
          "src/components/ErrorBoundary.tsx",
          "src/components/ProtectedRoute.tsx",
          "src/components/Layout.tsx",
          "src/components/Sidebar.tsx",
          "src/components/TopBar.tsx",
          "src/components/MobileDrawer.tsx"
        ]
      },
      {
        "name": "Authentication",
        "description": "Supabase auth with PKCE, URL session detection, user profile upsert, and OAuth token storage. Provides auth context, sign-in/up/Google OAuth, and sign-out.",
        "files": [
          "src/hooks/useAuth.tsx",
          "src/pages/Auth.tsx",
          "src/components/AuthDebug.tsx",
          "src/integrations/supabase/client.ts"
        ]
      },
      {
        "name": "Initial Gmail Fetch Flow",
        "description": "Handles first-time OAuth session, stores Gmail tokens, invokes edge function to generate digest, and shows an overlay with progress.",
        "files": [
          "src/hooks/useInitialFetch.tsx",
          "src/components/InitialFetchOverlay.tsx",
          "src/components/ConnectEmailDialog.tsx"
        ]
      },
      {
        "name": "Dashboard (Today’s Digest)",
        "description": "Loads today’s digest emails (importance ≥ 0.4), shows quick stats and refresh, prompts Gmail connection if missing.",
        "files": [
          "src/pages/Dashboard.tsx",
          "src/components/EmailCard.tsx",
          "src/components/EmptyState.tsx"
        ]
      },
      {
        "name": "History",
        "description": "Shows recent digests (last 30 days) with formatted dates and email cards.",
        "files": [
          "src/pages/History.tsx",
          "src/components/EmailCard.tsx",
          "src/components/EmptyState.tsx"
        ]
      },
      {
        "name": "Tasks",
        "description": "Task management with optimistic completion toggle, delete, and deadline update. Splits into pending and completed tabs.",
        "files": [
          "src/pages/Tasks.tsx",
          "src/hooks/useTasks.tsx",
          "src/components/TaskRow.tsx",
          "src/components/EmptyState.tsx"
        ]
      },
      {
        "name": "Settings",
        "description": "User preferences (digest time, number of top emails). Saves via edge function and loads from Supabase.",
        "files": [
          "src/pages/Settings.tsx"
        ]
      },
      {
        "name": "Marketing/Home",
        "description": "Public landing page with features, FAQs, and CTAs for sign-in/sign-up.",
        "files": [
          "src/pages/Home.tsx"
        ]
      },
      {
        "name": "Shared UI",
        "description": "Design system and shared UI components built on shadcn/ui and Tailwind.",
        "files": [
          "src/components/ui/*",
          "src/index.css",
          "src/App.css"
        ]
      },
      {
        "name": "Supabase Types & Client",
        "description": "Typed Supabase client and database types.",
        "files": [
          "src/integrations/supabase/client.ts",
          "src/integrations/supabase/types.ts"
        ]
      }
    ]
  }
}
